SET (SOURCES openfm.c common.c)

INCLUDE (CheckIncludeFiles)
INCLUDE (CheckFunctionExists)
INCLUDE (CheckSymbolExists)

CHECK_INCLUDE_FILES (stdio.h HAVE_STDIO_H)
IF (HAVE_STDIO_H)
    CHECK_FUNCTION_EXISTS (printf HAVE_PRINTF)
    CHECK_FUNCTION_EXISTS (fprintf HAVE_FPRINTF)
    CHECK_FUNCTION_EXISTS (snprintf HAVE_SNPRINTF)
    CHECK_FUNCTION_EXISTS (sscanf HAVE_SSCANF)
    CHECK_FUNCTION_EXISTS (fopen HAVE_FOPEN)
    CHECK_FUNCTION_EXISTS (fgets HAVE_FGETS)
    CHECK_FUNCTION_EXISTS (fclose HAVE_FCLOSE)
    CHECK_FUNCTION_EXISTS (perror HAVE_PERROR)
ELSE (HAVE_STDIO_H)
    MESSAGE (FATAL_ERROR "stdio.h not found!")
ENDIF (HAVE_STDIO_H)

CHECK_INCLUDE_FILES (stdlib.h HAVE_STDLIB_H)
IF (HAVE_STDLIB_H)
    CHECK_FUNCTION_EXISTS (malloc HAVE_MALLOC)
    CHECK_FUNCTION_EXISTS (calloc HAVE_CALLOC)
    CHECK_FUNCTION_EXISTS (free HAVE_FREE)
    CHECK_FUNCTION_EXISTS (exit HAVE_EXIT)
    CHECK_SYMBOL_EXISTS (EXIT_FAILURE stdlib.h HAVE_EXIT_FAILURE)
    CHECK_SYMBOL_EXISTS (EXIT_SUCCESS stdlib.h HAVE_EXIT_SUCCESS)
ELSE (HAVE_STDLIB_H)
    MESSAGE (FATAL_ERROR "stdlib.h not found!")
ENDIF (HAVE_STDLIB_H)

CHECK_INCLUDE_FILES (string.h HAVE_STRING_H)
IF (HAVE_STRING_H)
    CHECK_FUNCTION_EXISTS (strlen HAVE_STRLEN)
    CHECK_FUNCTION_EXISTS (strdup HAVE_STRDUP)
    CHECK_FUNCTION_EXISTS (strchr HAVE_STRCHR)
ELSE (HAVE_STRING_H)
    MESSAGE (FATAL_ERROR "string.h not found!")
ENDIF (HAVE_STRING_H)

INCLUDE_DIRECTORIES (${CMAKE_BINARY_DIR})
ADD_EXECUTABLE (openfm ${SOURCES})
# Look at this: http://cmake.org/Bug/bug.php?op=show&bugid=3779
INSTALL (TARGETS openfm RUNTIME DESTINATION bin)
